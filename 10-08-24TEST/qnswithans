1.Find Departments with No Employees
Problem: Given a `Departments` table and an `Employees` table,
find departments that do not have any employees.
Table Structure:
```
CREATE TABLE Departments (
DepartmentID INT,
DepartmentName VARCHAR(100)
);

CREATE TABLE Employees (
EmployeeID INT,
DepartmentID INT
);
```


ans:

  SELECT d.DepartmentID,d.DepartmentName 
  FROM Departments as d LEFT JOIN Employees as e
  on d.DepartmentID = e.DepartmentID
  WHERE e.EmployeeID IS NULL;


===========================================================================
2.Find the Day with the Highest Sales
Problem: Given a `Sales` table
with columns `SaleAmount` and `SaleDate`,
find the day with the highest total sales.

ANS:

	SELECT SaleDate,SUM(SaleAmount) AS TotalSales
      FROM Sales
      GROUPBY SalesDate
      ORDERBY TotalSales DESC 
      LIMIT 1;
=====================================================================
3.Find the Average Salary by Department
Problem: Given an `Employees` table
with columns `EmployeeID`, `DepartmentID`, and `Salary`,
find the average salary for each department.

Table Structure:
```
CREATE TABLE Employees (
EmployeeID INT,
DepartmentID INT,
Salary DECIMAL(10, 2)
);
```

ans:
	SELECT  DepartmentID , AVG(Salary) AS AverageSalary
	FROM Employees
	GROUP BY  DepartmentID;
====================================================================================

4.Find the Average Sales Per Customer
Problem:
Given an `Orders` table
with columns `OrderID`, `CustomerID`, and `SaleAmount`,
calculate the average sales amount per customer.

ANS: 
    SELECT CustomerID ,AVG(SaleAmount) AS  AverageSales
    FROM Orders
    GROUP BY CustomerID;
=======================================================================================
5.Find Customers with No Orders in the Last Year
Problem: Given a `Customers` table and an `Orders` table,
find customers who have not placed any orders in the last year.

ANS:

	SELECT c.CustomerID 
      FROM Customers  as c LEFT JOIN  Orders as o
      on c.CustomerID =o.CustomerID AND 
      o.OrderDate >= DATEADD(year,-1,GETDATE())
      WHERE o.OrderID IS NULL;
