using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
//using log4net;

namespace Week4AssessmentApp
{

    public class ServerException : Exception
    {
        public ServerException(string message) : base(message) { }
    }
    public class HospitalMedication
    {
        public int HospitalID { get; set; }

        public string DoctorName { get; set; }

        public string Medication { get; set; }

        public double Dosage { get; set; }

        public override string ToString()
        {
            return $"[{HospitalID},{DoctorName},{Medication},{Dosage}]";
        }
    }

    public class HospitalMedicationService
    {
        //public static void Read(HospitalMedication[] hospitalMedications)
        //{


        //    for (int i = 0; i < hospitalMedications.Length; i++)
        //    {
        //        Console.WriteLine($"Enter the details of Hospital Medications {i+1}:");
        //        Console.Write("Enter the HospitalID:");
        //        int hospitalID = int.Parse(Console.ReadLine());

        //        Console.Write("Enter the DoctorName:");
        //        string doctorName = Console.ReadLine();

        //        Console.Write("Enter the Medication:");
        //        string medication = Console.ReadLine();

        //        Console.Write("Enter the Dosage in milligrams:");
        //        double dosage = double.Parse(Console.ReadLine());

        //        hospitalMedications[i] = new HospitalMedication
        //                                  {
        //                                     HospitalID = hospitalID,
        //                                     DoctorName = doctorName,
        //                                     Medication = medication,
        //                                     Dosage = dosage
        //                                  };


        //    }

        //}
        private static string connectionString = "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=Week4Assessment;Integrated Security=True;";

        public static void Read(HospitalMedication[] hospitalMedications)
        {
            try
            {
                using (SqlConnection conn = new SqlConnection(connectionString))
                {
                    string query = "SELECT HospitalID, DoctorName, Medication,Dosage FROM HospitalMedication";
                    SqlCommand cmd = new SqlCommand(query, conn);

                    conn.Open();
                    SqlDataReader reader = cmd.ExecuteReader();
                    for (int i = 0; i < hospitalMedications.Length; i++)
                    {
                        if (!reader.Read())
                        {
                            throw new ServerException("[0101]Server Errror.");//throw error
                        }
                        hospitalMedications[i] = new HospitalMedication
                        {
                            HospitalID = (int)reader["HospitalID"],
                            DoctorName = reader["DoctorName"].ToString(),
                            Medication = reader["Medication"].ToString(),
                            Dosage = (double)reader["Dosage"]
                        };
                    }
                }

            }
            catch (SqlException ex)
            {
                // Handle SQL exceptions
                //Console.WriteLine($"SQL Error: {ex.Message}");
                throw new ServerException($"[0102]Server Errror.{ex.Message}");//throw Error
            }
            catch (ServerException ex)
            {
                throw ex;
            }
            catch (Exception ex)
            {
                // Handle other exceptions
                //Console.WriteLine($"Error: {ex.Message}");
                throw new ServerException($"[0103]Server Errror.{ex.Message}");//throw Error
            }
        }
        public static void Sort(HospitalMedication[] hospitalMedications)
        {
            for (int i   = 0; i < hospitalMedications.Length - 1; i++)
            {
                for (int j = i + 1; j < hospitalMedications.Length; j++)
                {
                    if (string.Compare(hospitalMedications[i].Medication, hospitalMedications[j].Medication) > 0)
                    {
                        HospitalMedication temp = hospitalMedications[i];
                        hospitalMedications[i] = hospitalMedications[j];
                        hospitalMedications[j] = temp;
                    }
                }
            }

        }
        public static HospitalMedication FindMax(HospitalMedication[] hospitalMedications, string doctorName)
        {
            
            HospitalMedication maxDosageMedication = null;
            double maxDosage = 0;

            foreach (HospitalMedication medication in hospitalMedications)
            {
                if (medication.DoctorName == doctorName && medication.Dosage > maxDosage)
                {
                    maxDosageMedication = medication;
                    maxDosage = medication.Dosage;
                }
            }

            return maxDosageMedication;



        }
        public static HospitalMedication FindSecondMin(HospitalMedication[] hospitalMedications)
        {
            double minDosage = double.MaxValue;
            double secondMinDosage = double.MaxValue;
            HospitalMedication secondLeastDosageMedication = null;

            foreach (HospitalMedication medication in hospitalMedications)
            {
                if (medication.Dosage < minDosage)
                {
                    secondMinDosage = minDosage;
                    minDosage = medication.Dosage;
                    secondLeastDosageMedication = medication;
                }
                else if (medication.Dosage < secondMinDosage && medication.Dosage != minDosage)
                {
                    secondMinDosage = medication.Dosage;
                    secondLeastDosageMedication = medication;
                }
            }

            return secondLeastDosageMedication;



        }

    }
    public class Program
    {
        //private static readonly ILog log = LogManager.GetLogger(typeof(Program));
        static void Main(string[] args)
        {
            HospitalMedication[] hospitalMedications = new HospitalMedication[3];
            try
            {
                HospitalMedicationService.Read(hospitalMedications);
            }
            catch (ServerException ex)
            {
                //log.Error($"{ex.Message}");
                Console.WriteLine($"{ex.Message}");
            }
            //log.Info("Enter the Doctor name to find the maximum dosage of that doctor:");
            Console.WriteLine("Enter the Doctor name to find the maximum dosage of that doctor:");
            string doctorNameforMaxDosage = "Sanjay";
            HospitalMedication max = HospitalMedicationService.FindMax(hospitalMedications, doctorNameforMaxDosage);
            //log.Info($"max = {max}");
            Console.WriteLine($"max = {max}");
            HospitalMedication secondMin = HospitalMedicationService.FindSecondMin(hospitalMedications);
            //log.Info($"secondMin = {secondMin}");
            Console.WriteLine($"secondMin = {secondMin}");
            HospitalMedicationService.Sort(hospitalMedications);
            string output = "";
            foreach(var h in hospitalMedications)
            {
                output+= $"{h}";


            }
            //log.Info(output);
            Console.WriteLine(output);






        }
    }
}
